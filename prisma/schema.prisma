// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Book {
  id                   String                 @id @default(uuid())
  title                String
  author               String
  description          String
  year                 Int
  filePath             String
  coverPath            String
  averageRating        Int                    @default(0)
  numOfComments        Int                    @default(0)
  price                Int                    @default(199)
  isAvailable          Boolean                @default(true)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  orders               Order[]
  genre                Genre[]
  comment              Comment[]
  downloadVerification DownloadVerification[]
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id          String   @id @default(uuid())
  userId      String
  bookId      String
  quantity    Int
  totalPrice  Int
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  book        Book     @relation(fields: [bookId], references: [id], onDelete: Restrict)
}

model Genre {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Restrict)
}

model Comment {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
}
